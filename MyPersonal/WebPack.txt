1.安装Webpack
	npm install webpack webpack-cli --save-dev # -D to type less
	--save和--save-dev分离应用程序和开发依赖项。前者安装和写入package.json dependencies字段，而后者写入devDependencies
	
	a-无配置运行+模式
		node_modules/.bin/webpack --mode development/production
		
2.配置html-webpack-plugin
	安装:npm install html-webpack-plugin --save-dev	
	轻量级(mini-html-webpack-plugin)
	
3.快捷构建方式
	"build": "webpack --mode production"
	"dev": "webpack --mode development"
	
4.webpack-dev-server
	webpack监视模式:npm run build -- --watch
	安装:npm install webpack-dev-server --save-dev
	 "start": "webpack-dev-server --mode development --open"
	  
	devServer: {
		stats: "errors-only",
		host: process.env.HOST,
		port: process.env.PORT,
		open: true
    }
	
5.加载CSS(配置时,loader从右到左,style在前,css在后)
	CSS-loader: 解决@import和url()导入的css文件,注入出口文件中
	style-loader: 通过style标签,将css文件导入的head中,creates style nodes from JS strings
	安装: npm install css-loader style-loader --save-dev
	
	内联CSS的不适合,引用MiniCssExtractPlugin生成单独的CSS文件
	
	less
		npm install less less-loader -D
	 
	sass ----------  /\.scss$/
		npm install node-sass  sass-loader -D
	 
	stylus
		npm install stylus stylus-loader -D
	 
6.分离CSS
	npm install mini-css-extract-plugin --save-dev	
	 
7.去除未使用CSS	
	npm install purifycss-webpack purify-css --save-dev
	 
8.自动添加前缀(css前缀)
	npm install postcss-loader autoprefixer --save-dev
	 
9.加载图片
	npm install file-loader url-loader --save-dev
	
10.转换JS
	npm i babel-loader @babel/core @babel/preset-env -D
	
11.	打包后调试
	source-map:在一个单独文件中产生一个完整且功能完全的文件。这个文件具有最好的source map,但是它会减慢打包速度
	cheap-module-source-map:在一个单独的文件中产生一个不带列映射的map，不带列映射提高了打包速度，但是也使得浏览器开发者工具只能对应到具体的行，不能对应到具体的列（符号）,会对调试造成不便。
	
	eval-source-map:使用eval打包源文件模块，在同一个文件中生产干净的完整版的sourcemap，但是对打包后输出的JS文件的执行具有性能和安全的隐患。在开发阶段这是一个非常好的选项，在生产阶段则一定要不开启这个选项
	
	cheap-module-eval-source-map:这是在打包文件时最快的生产source map的方法，生产的 Source map 会和打包后的JavaScript文件同行显示，没有影射列，和eval-source-map选项具有相似的缺点。
	
12.代码拆分--动态导入
	babel配置npm install @babel/plugin-syntax-dynamic-import --save-dev
	要禁止代码分裂，使用webpack.optimize.LimitChunkCountPlugin与maxChunks设置为1。
	
13.清理构建目录	(dist清理)
	npm install clean-webpack-plugin --save-dev
	
14.版权注释添加 BannerPlugin	(webapck内置)

15.复制文件插件 copy-webpack-plugin

16.hash,chunkhash,contenthash